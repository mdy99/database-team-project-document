-- 플레이어 정보
SELECT * FROM GAME_SESSION WHERE PLAYER_KEY = 1 ORDER BY GAME_SESSION_KEY DESC FETCH FIRST ROW ONLY;
-- 진열대 정보
SELECT D.DISPLAY_POS, I.*, IC.*
FROM GAME_SESSION_ITEM_DISPLAY D, EXISTING_ITEM I, ITEM_CATALOG IC
WHERE
    D.GAME_SESSION_KEY = (
        SELECT GAME_SESSION_KEY FROM GAME_SESSION
        WHERE PLAYER_KEY = 1
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    )
    AND D.ITEM_KEY = I.ITEM_KEY
    AND I.ITEM_CATALOG_KEY = IC.ITEM_CATALOG_KEY
ORDER BY D.DISPLAY_POS;
-- 당일자 Event
SELECT * FROM EXISTING_NEWS N, NEWS_CATALOG NC
WHERE
    N.GAME_SESSION_KEY = (
        SELECT GAME_SESSION_KEY FROM GAME_SESSION
        WHERE PLAYER_KEY = 1
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    )
    AND N.NCAT_KEY = NC.NCT_KEY
ORDER BY NC.NCT_KEY;
-- 손님 pk -> 손님 선호하는 Category 진열장에 있는 선호 Item들
SELECT *
FROM CUSTOMER_CATALOG C, GAME_SESSION_ITEM_DISPLAY D, EXISTING_ITEM I, ITEM_CATALOG IC
WHERE
    C.CUSTOMER_KEY = 1
    AND D.GAME_SESSION_KEY = (
        SELECT GAME_SESSION_KEY FROM GAME_SESSION
        WHERE PLAYER_KEY = 1
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    )
    AND D.ITEM_KEY = I.ITEM_KEY
    AND I.ITEM_CATALOG_KEY = IC.ITEM_CATALOG_KEY
    AND IC.CATEGORY_KEY = C.CATEGORY_KEY
ORDER BY D.DISPLAY_POS;
-- 플레이어의 거래 기록
SELECT * FROM DEAL_RECORD
WHERE GAME_SESSION_KEY = (
    SELECT MAX(GAME_SESSION_KEY) FROM GAME_SESSION
    WHERE PLAYER_KEY = 1
    ORDER BY GAME_SESSION_KEY DESC
    FETCH FIRST ROW ONLY
);
-- 손님의 정보 + 힌트: 사기정도, 잘수집정도, 부주의함
SELECT CUSTOMER_NAME, IMG_ID, FRAUD, WELL_COLLECT, CLUMSY FROM CUSTOMER_CATALOG WHERE CUSTOMER_ID = 1;
-- 거래에 필요한 정보 (레전더리 확률값, 유니크 확률값, 레어 확률값, 진품 확률값)
SELECT
    (10 * CLUMSY) FLAW_BASE
    (15 + (65 * WELL_COLLECT)) LEGENDARY_P
    (20 + (65 * (1 - WELL_COLLECT)) / 3) UNIQUE_P
    (30 + (65 * (1 - WELL_COLLECT)) / 3) RARE_P
    (35 + (65 * (1 - WELL_COLLECT)) / 3) NORMAL_P
    (10 + 90 * FRAUD) FAKE_P
    (1 - FAKE_P) GENIUE_P
FROM CUSTOMER_CATALOG WHERE CUSTOMER_ID = 1;
-- 진열장 위치 -> Item
SELECT I.*, IC.*
FROM GAME_SESSION_ITEM_DISPLAY D, EXISTING_ITEM I, ITEM_CATALOG IC
WHERE
    D.DISPLAY_POS = 1
    AND D.GAME_SESSION_KEY = (
        SELECT GAME_SESSION_KEY FROM GAME_SESSION
        WHERE PLAYER_KEY = 1
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    )
    AND D.ITEM_KEY = I.ITEM_KEY
    AND I.ITEM_CATALOG_KEY = IC.ITEM_CATALOG_KEY;
-- 다음 날 넘어갈 때, 정산 -> 결과
SELECT 
    G.MONEY + SUM(BOUGHT.PURCHASE_PRICE) - SUM(SOLD.SELLING_PRICE) AS TODAY_START,
    G.MONEY AS TODAY_END,
    G.PAWNSHOP_DEBT * 0.05 AS TODAY_INTEREST,
    G.MONEY - G.PAWNSHOP_DEBT * 0.05 AS TODAY_FINAL,
FROM GAME_SESSION G, DEAL_RECORD BOUGHT, DEAL_RECORD SOLD
WHERE
    G.GAME_SESSION_KEY = (
        SELECT GAME_SESSION_KEY FROM GAME_SESSION
        WHERE PLAYER_KEY = 1
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    )
    AND BOUGHT.GAME_SESSION_KEY = G.GAME_SESSION_KEY
    AND SOLD.GAME_SESSION_KEY = G.GAME_SESSION_KEY
    AND BOUGHT.BOUGHT_DATE = G.DAY_COUNT
    AND SOLD.SOLD_DATE = G.DAY_COUNT;
SELECT BOUGHT.*
FROM GAME_SESSION G, DEAL_RECORD BOUGHT
WHERE
    G.GAME_SESSION_KEY = (
        SELECT GAME_SESSION_KEY FROM GAME_SESSION
        WHERE PLAYER_KEY = 1
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    )
    AND BOUGHT.GAME_SESSION_KEY = G.GAME_SESSION_KEY
    AND BOUGHT.BOUGHT_DATE = G.DAY_COUNT;
SELECT SOLD.*
FROM GAME_SESSION G, DEAL_RECORD SOLD
WHERE
    G.GAME_SESSION_KEY = (
        SELECT GAME_SESSION_KEY FROM GAME_SESSION
        WHERE PLAYER_KEY = 1
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    )
    AND SOLD.GAME_SESSION_KEY = G.GAME_SESSION_KEY
    AND SOLD.SOLD_DATE = G.DAY_COUNT;
-- 다음 주 넘어갈 때, 정산 -> 결과
SELECT 
    G.MONEY + SUM(BOUGHT.PURCHASE_PRICE) - SUM(SOLD.SELLING_PRICE) AS TODAY_START,
    G.MONEY AS TODAY_END,
    G.PAWNSHOP_DEBT * 0.05 AS TODAY_INTEREST,
    G.PERSONAL_DEBT * 0.0005 AS TODAY_INTEREST_PERSONAL,
    G.MONEY - G.PAWNSHOP_DEBT * 0.05 - G.PERSONAL_DEBT * 0.0005 AS TODAY_FINAL,
FROM GAME_SESSION G, DEAL_RECORD BOUGHT, DEAL_RECORD SOLD
WHERE
    G.GAME_SESSION_KEY = (
        SELECT GAME_SESSION_KEY FROM GAME_SESSION
        WHERE PLAYER_KEY = 1
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    )
    AND BOUGHT.GAME_SESSION_KEY = G.GAME_SESSION_KEY
    AND SOLD.GAME_SESSION_KEY = G.GAME_SESSION_KEY
    AND BOUGHT.BOUGHT_DATE = G.DAY_COUNT
    AND SOLD.SOLD_DATE = G.DAY_COUNT;
-- 해당 아이디 있는지 확인
SELECT HASHED_PW FROM PLAYER WHERE PLAYER_ID = 'player1';
-- 게임 세션(회차) 기록
SELECT CLEAR_DAY_COUNT, CLEAR_DATE, MGAIN_DEAL.*, MLOSS_DEAL.*
FROM GAME_SESSION G, DEAL_RECORD MGAIN_DEAL, DEAL_RECORD MLOSS_DEAL
WHERE
    G.GAME_SESSION_KEY = (
        SELECT GAME_SESSION_KEY FROM GAME_SESSION
        WHERE PLAYER_KEY = 1
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    )
    AND MGAIN_DEAL.DRC_KEY = (
        SELECT DRC_KEY FROM DEAL_RECORD D
        WHERE D.GAME_SESSION_KEY = G.GAME_SESSION_KEY
        ORDER BY GAME_SESSION_KEY DESC
        FETCH FIRST ROW ONLY
    );
